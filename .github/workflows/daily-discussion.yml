name: daily-discussion
on:
  schedule:
    - cron: "00 6 * * *"   # daily 06:00 UTC
  workflow_dispatch: {}

permissions:
  discussions: write
  contents: read

jobs:
  post:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build summary
        id: sum
        uses: ./.github/actions/summarize-commits
      - name: Ensure category & post
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;
            // Get categories
            const cats = await github.graphql(`
              query($owner:String!, $repo:String!) {
                repository(owner:$owner, name:$repo) {
                  discussionCategories(first:20){ nodes { id, name } }
                }
              }`, { owner, repo });
            const nodes = cats.repository.discussionCategories.nodes;
            const cat = nodes.find(n => n.name.toLowerCase() === 'announcements') || nodes[0];
            const title = `Daily Update â€“ ${new Date().toISOString().slice(0,10)}`;
            const body  = `${{ steps.sum.outputs.body }}`;
            await github.graphql(`
              mutation($repoId:ID!, $catId:ID!, $title:String!, $body:String!) {
                createDiscussion(input:{repositoryId:$repoId, categoryId:$catId, title:$title, body:$body}) {
                  discussion { number }
                }
              }`, {
                repoId: (await github.rest.repos.get({owner, repo})).data.node_id,
                catId: cat.id, title, body
              });
