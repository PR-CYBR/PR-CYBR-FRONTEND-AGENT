name: functionality-test
on:
  push:
    branches: [ codex ]
  pull_request:
    branches: [ codex, main ]

permissions:
  contents: read

jobs:
  detect-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Quick structure sanity (YAML/JSON)
        run: |
          set -e
          if command -v yamllint >/dev/null 2>&1; then :
          else sudo pipx install yamllint >/dev/null; fi
          find . -type f -name "*.yml" -o -name "*.yaml" | xargs -r yamllint -s
          find . -type f -name "*.json" | xargs -r -I{} jq . {} >/dev/null

      - name: Detect project type
        id: detect
        run: |
          if [ -f package.json ]; then echo "type=node" >> "$GITHUB_OUTPUT"; exit 0; fi
          if [ -f pyproject.toml ] || [ -f requirements.txt ]; then echo "type=python" >> "$GITHUB_OUTPUT"; exit 0; fi
          echo "type=generic" >> "$GITHUB_OUTPUT"

      - name: Node CI
        if: steps.detect.outputs.type == 'node'
        uses: actions/setup-node@v4
        with: { node-version: 'lts/*' }
      - if: steps.detect.outputs.type == 'node'
        run: |
          npm ci --ignore-scripts
          npm run -q lint || echo "No lint script; skipping"
          npm test -s || echo "No tests; skipping"

      - name: Python CI
        if: steps.detect.outputs.type == 'python'
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - if: steps.detect.outputs.type == 'python'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install ruff pytest || true
          ruff check . || echo "ruff not configured; skipping"
          pytest -q || echo "no tests; skipping"

      - name: Generic light checks
        if: steps.detect.outputs.type == 'generic'
        run: |
          git ls-files --stage >/dev/null
          test -z "$(find -L . -type l -xtype l -print -quit)" || (echo "Broken symlinks found"; exit 1)
